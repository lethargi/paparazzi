<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="1.2" ground_alt="0" lat0="51.990634" lon0="4.376789" max_dist_from_home="20" name="Rotorcraft Optitrack (Delft)" security_height="0.3">
  <header>
	#include "autopilot.h"
    #include "subsystems/ahrs.h"
    #include "subsystems/electrical.h"
    #include "subsystems/datalink/datalink.h"
    #ifdef VISRL_NPS
    #include "modules/my_visrl/vis_nps.h"
    #endif
    #ifdef VISRL_AP
	#include "modules/my_visrl/vis_ap.h"
    #endif
	#include "modules/my_visrl/visrl.h"
	#include "modules/my_visrl/mynavfuncs.h"
	#include "modules/my_visrl/simsoft.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="StartPos" lat="51.990634" lon="4.376789"/>
    <waypoint name="CLIMB" x="0.0" y="2.5"/>
    <waypoint name="CURPOS" x="3" y="3.5"/>
    <waypoint name="STDBY" x="0" y="0"/>
    <waypoint name="GOAL" x="0" y="0"/>
    <waypoint name="HeightRef" x="3" y="7"/>
    <waypoint lat="51.990622" lon="4.376852" name="SZ1"/>
    <waypoint lat="51.990594" lon="4.376778" name="SZ2"/>
    <waypoint lat="51.990639" lon="4.376732" name="SZ3"/>
    <waypoint lat="51.990667" lon="4.376803" name="SZ4"/>
    <waypoint name="BoundaryChecker" x="0.25" y="0.25"/>
    <!--
    <waypoint height="12." name="CAM" x="-20" y="-50"/>
    <waypoint name="XYFINDER" x="30" y="-30"/>
    -->
    <waypoint name="TD" x="5" y="-5"/>
  </waypoints>
  <sectors>
    <sector color="green" name="MyWorld">
      <corner name="SZ1"/>
      <corner name="SZ2"/>
      <corner name="SZ3"/>
      <corner name="SZ4"/>
    </sector>
  </sectors>
  <blocks>
    <block name="Wait GPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine">
      <call_once fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="stateGetPositionEnu_f()->z > 1.0" deroute="Standby"/>
      <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
      <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
      <stay climb="nav_climb_vspeed" vmode="climb" wp="CLIMB"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <stay wp="STDBY"/>
    </block>
    <block name="WaitOnGoal">
      <stay wp="GOAL"/>
    </block>
    <block name="RL_Reset_Heading">
      <call fun="rl_reset_heading()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="RL_FOR">
      <call_once fun="rl_action_forward()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="RL_LEF">
      <call_once fun="rl_action_left()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="RL_RIG">
      <call_once fun="rl_action_right()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="RandomizeStart">
      <call_once fun="NavSetWaypointHere(WP_CURPOS)"/>
      <call fun="rl_randomize_start(WP_GOAL,WP_StartPos)"/>
      <call fun="setAltToWp(WP_GOAL,WP_HOME)"/>
      <call fun="rl_smooth_turn(head_roll)"/>
      <stay until="stage_time>8" wp="CURPOS"/>
      <go approaching_time="0" from="CURPOS" hmode="route" wp="GOAL"/>
      <stay until="stage_time>5" wp="GOAL"/>
      <deroute block="InitRL"/>
    </block>
    <block name="SetupEpisode">
      <call_once fun="NavSetWaypointHere(WP_CURPOS)"/>
      <go approaching_time="0" from="CURPOS" hmode="route" wp="StartPos"/>
      <call fun="rl_reset_heading()"/>
      <stay until="stage_time>5" wp="StartPos"/>
      <call_once fun="NavSetWaypointHere(WP_GOAL)"/>
      <call fun="setAltToWp(WP_GOAL,WP_HOME)"/>
      <stay until="stage_time>1" wp="GOAL"/>
    </block>
    <block name="InitRL">
      <call fun="rl_init()"/>
      <stay until="stage_time>1" wp="GOAL"/>
    </block>
    <block name="DoOneStep">
      <while cond="!rl_isterminal">
        <call fun="rl_set_cur()"/>
        <call fun="rl_write_step_log()"/>
        <call fun="rl_take_cur_action()"/>
        <stay until="stage_time>1" wp="GOAL"/>
        <call fun="rl_set_nxt()"/>
        <call fun="rl_update_qdict()"/>
        <call fun="rl_check_terminal()"/>
      </while>
    </block>
    <block name="EndEp">
      <call fun="rl_write_episode_log()"/>
      <exception cond="episodes_simulated > rl_curmaxeps" deroute="IncEps"/>
      <deroute block="SetupEpisode"/>
    </block>
    <block name="IncEps">
      <call fun="rl_inc_maxepochs()"/>
      <call fun="rl_inc_eps()"/>
      <call fun="rl_write_episode_log()"/>
      <call fun="print_qdict()"/>
      <call fun="write_qdict()"/>
      <call fun="copy_qdict()"/>
      <exception cond="episodes_simulated > rl_maxeps" deroute="EndRl"/>
      <deroute block="SetupEpisode"/>
    </block>
    <block name="EndRl">
      <call fun="rl_write_episode_log()"/>
      <call fun="print_qdict()"/>
      <call fun="write_qdict()"/>
      <call fun="copy_qdict()"/>
      <call fun="copy_logs()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="IncMaxEpochs">
      <call fun="rl_inc_maxepochs()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="IncEpsilon">
      <call fun="rl_inc_eps()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="DecEpsilon">
      <call fun="rl_dec_eps()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="CopyTest">
      <call fun="copy_qdict()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="PrintQDict">
      <call fun="print_qdict()"/>
      <stay wp="GOAL"/>
    </block>
    <block name="WriteQDict">
      <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
      <call fun="write_qdict()"/>
      <stay wp="STDBY"/>
    </block>
    <block name="ReadQDict">
      <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
      <call fun="load_qdict()"/>
      <stay wp="STDBY"/>
    </block>
    <block name="ReadQDict_TXT">
      <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
      <call fun="load_qdict_fromtxt()"/>
      <stay wp="STDBY"/>
    </block>
    <block name="land here" strip_button="Land Here" strip_icon="land-right.png">
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land">
      <go wp="TD"/>
    </block>
    <block name="flare">
      <exception cond="NavDetectGround()" deroute="Holding point"/>
      <exception cond="!nav_is_in_flight()" deroute="landed"/>
      <call fun="NavStartDetectGround()"/>
      <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
